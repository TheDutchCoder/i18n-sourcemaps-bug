import { describe, expect, test } from 'vitest'
import type { FinancialCommon, RvSnapshot } from '~/types'
import getFreeDistanceKms from '~/utils/get-free-distance-kms'

const mockRvSnapshotUS: RvSnapshot = {
  Country: 'US',
  IsChargeMileage: true,
  DailyKMAllowed: 100,
  AllowCrossBorderTravel: false,
  AllowFestivalEventsParticipation: 'No',
  AllowOnlyExperiencedSimilarRV: false,
  ApplyIncomeProtectionByDefault: false,
  DefaultPrice: 0,
  DiscountOnMonth: 0,
  DiscountOnWeek: 0,
  EndDate: '',
  GSTPercentage: 0,
  HasSmartPricingApplied: false,
  HSTPercentage: 0,
  Id: 0,
  InsideLeadDays: 0,
  InsuranceProtectionCoveredAmount: 0,
  InsuranceProtectionFeePct: 0,
  IsChargeGenerator: false,
  IsDeliveryOnly: false,
  IsFeatured: false,
  IsInsured: false,
  MidweekDiscount: 0,
  OriginalDefaultPrice: 0,
  OutsideLeadDays: 0,
  OwnerServiceFeePercentage: 0,
  OwnerTaxPercentage: 0,
  PSTPercentage: 0,
  QSTPercentage: 0,
  RentalType: 'TravelTrailer',
  RVId: '',
  SecurityDepositAmount: 0,
  ShortStaysOptIn: false,
  StartDate: '',
  Value: 0,
}

const mockRvSnapshotCA: RvSnapshot = {
  ...mockRvSnapshotUS,
  Country: 'CA',
}

const mockInvalidRvSnapshot: RvSnapshot = {
  ...mockRvSnapshotUS,
  IsChargeMileage: false,
}

const mockFinancialUS: FinancialCommon = {
  TotalNights: 10,
  Country: 'US',
  AmountDue: 0,
  BookingId: 0,
  BuyNowPayLaterUsed: false,
  CreditsApplied: 0,
  CreditsToBeApplied: 0,
  CreditsToBeAppliedLater: 0,
  DeductibleAmount: 0,
  DeductibleAmountBasic: 0,
  DeductibleAmountPremium: 0,
  DeductibleAmountStandard: 0,
  DeductibleAmountStationary: 0,
  DepositAmount: 0,
  Discount: 0,
  FullPaymentAmountOnCancel: 0,
  InsurancePricingStrategy: 'PercentageOfRentalAmount',
  MinimumDailyServiceFeeMotorHome: 0,
  MinimumDailyServiceFeeRVCottage: 0,
  MinimumDailyServiceFeeTravelTrailer: 0,
  NightlyInsuranceCost: 0,
  NightlyInsuranceRate: 0,
  NightlyInsuranceRateBasic: 0,
  NightlyInsuranceRatePremium: 0,
  NightlyInsuranceRateStandard: 0,
  NightlyInsuranceRateStationary: 0,
  NightlyRoadsideBasicRate: 0,
  NightlyRoadsidePremiumRate: 0,
  NightlyRoadsideRate: 0,
  NightlyRoadsideStandardRate: 0,
  NightlyRoadsideStationaryRate: 0,
  OwnerId: 0,
  OwnerPayoutOutstandingBalance: 0,
  OwnerPayoutTotal: 0,
  OwnerReferralCredits: 0,
  OwnerSalesTaxOutstandingBalance: 0,
  OwnerServiceFeePercentage: 0,
  OwnerTotal: 0,
  PayLater: 0,
  PayLaterOn: '',
  PayToReserve: 0,
  RemainingAmount: 0,
  RemainingCreditsToBeApplied: 0,
  RentalType: 'TravelTrailer',
  RenterDiscountedTotal: 0,
  RenterId: 0,
  RenterOutstandingBalance: 0,
  RenterReferralCredits: 0,
  RenterServiceFeePercentage: 0,
  RenterTotal: 0,
  SecurityDepositAmount: 0,
  SecurityDepositBalance: 0,
  SecurityDepositFee: 0,
  SecurityDepositOn: '',
  Status: 'TripStarted',
  TotalAddOns: 0,
  TotalCleanings: 0,
  TotalCloseouts: 0,
  TotalCreditPayments: 0,
  TotalCreditRefunded: 0,
  TotalCreditsToBeApplied: 0,
  TotalDamages: 0,
  TotalDeductiblesCollected: 0,
  TotalDelivery: 0,
  TotalDeliveryFee: 0,
  TotalDepositDeductible: 0,
  TotalGenerators: 0,
  TotalGMV: 0,
  TotalGoodwillRefunds: 0,
  TotalIncomeProtection: 0,
  TotalIncomeProtectionPayout: 0,
  TotalInsuranceCosts: 0,
  TotalInsurances: 0,
  TotalMileage: 0,
  TotalOthers: 0,
  TotalOwnerAdminPayouts: 0,
  TotalOwnerDebts: 0,
  TotalOwnerSalesTaxes: 0,
  TotalOwnerSalesTaxRecognitions: 0,
  TotalOwnerServiceFee: 0,
  TotalOwnerServiceFeeWithoutDelivery: 0,
  TotalOwnerTaxes: 0,
  TotalPaid: 0,
  TotalPayments: 0,
  TotalPayoutAmounts: 0,
  TotalPayoutHolds: 0,
  TotalPayoutReversals: 0,
  TotalPayouts: 0,
  TotalPreDiscountRentalAmount: 0,
  TotalPromotionalCreditPayments: 0,
  TotalPromotionalCreditRefunded: 0,
  TotalPromotionalDiscountAmount: 0,
  TotalReferralCredits: 0,
  TotalRefundableAmount: 0,
  TotalRefunds: 0,
  TotalRegularPayouts: 0,
  TotalRentalAmount: 0,
  TotalRentalPaid: 0,
  TotalRentalPayments: 0,
  TotalRentalRefunds: 0,
  TotalRenterAdminCharges: 0,
  TotalRenterAdminRefunds: 0,
  TotalRenterCreditPayments: 0,
  TotalRenterCreditRefunded: 0,
  TotalRenterRefunds: 0,
  TotalRenterRevenue: 0,
  TotalRenterServiceFee: 0,
  TotalRenterTaxes: 0,
  TotalReversiblePayoutAmount: 0,
  TotalRoadsides: 0,
  TotalSecurityDepositPaid: 0,
  TotalSecurityDepositPaymentReductions: 0,
  TotalSecurityDepositPayments: 0,
  TotalSecurityDepositRefunds: 0,
  TotalSecurityDeposits: 0,
  TotalStripeServiceFeeAmount: 0,
  TotalStripeServiceFees: 0,
  TotalUncollectableFunds: 0,
  TotalUnusedCredits: 0,
  TotalUSTaxes: 0,
}

const mockFinancialCA: FinancialCommon = {
  ...mockFinancialUS,
  Country: 'CA',
}

describe('getFreeDistanceKm', () => {
  test('returns free distance in Kms for US Location', () => {
    const freeDistance = getFreeDistanceKms(mockRvSnapshotUS, mockFinancialUS)
    const expectedFreeDistance = Math.round(miToKm(mockRvSnapshotUS.DailyKMAllowed! * (mockFinancialUS.TotalNights! + 1)))
    expect(freeDistance).toBe(expectedFreeDistance)
  })

  test('returns free distance in Kms for CA Location', () => {
    const freeDistance = getFreeDistanceKms(mockRvSnapshotCA, mockFinancialCA)
    const expectedFreeDistance = Math.round(mockRvSnapshotCA.DailyKMAllowed! * (mockFinancialCA.TotalNights! + 1))
    expect(freeDistance).toBe(expectedFreeDistance)
  })

  test('returns null when IsChargeMileage is false', () => {
    const freeDistance = getFreeDistanceKms(mockInvalidRvSnapshot, mockFinancialCA)
    expect(freeDistance).toBe(null)
  })
})
